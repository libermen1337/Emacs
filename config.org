* Basic settings -
** Theme -
*** loading the theme -
#+BEGIN_SRC emacs-lisp
(load-theme 'gruvbox-dark-hard t)

#+END_SRC
*** Cyberpunk theme -
#+BEGIN_SRC emacs-lisp
  (unless (package-installed-p 'cyberpunk-theme)
    (package-refresh-contents)
    (package-install 'cyberpunk-theme))

#+END_SRC
** elcord -
#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'elcord)
  (package-refresh-contents)
  (package-install 'elcord))
(elcord-mode)
#+END_SRC
** General settings -
#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  ;;font -
  (set-frame-font "JetBrains Mono" nil t)
  ;;startup screen -
  (setq inhibit-startup-screen t)
  ;;alias -
  (defalias 'yes-or-no-p 'y-or-n-p)

  ;;keybinding for ansi terminal -
  (global-set-key (kbd "<s-return>") 'ansi-term) 

  ;;no politics -
  (setq scroll-conservatively 100)

  ;; remove the bell -
  (setq ring-bell-function 'ignore)

  ;;find your cursor only for GUI -
  (when  window-system (global-hl-line-mode t))

  ;;prettify symbols for GUI only -
  ( when window-system(global-prettify-symbols-mode t)) 

  ;;remove the backup files -
  (setq make-backup-files nil)
  (setq auto-save-default nil)


  ;;org <s snippets -
  (when (version<="9.2" (org-version))
    (require 'org-tempo))
#+END_SRC

** Terminal -
*** Setting bash as default shell -
#+BEGIN_SRC emacs-lisp
(defvar my-term-shell "/bin/bash")
(defadvice ansi-term (before force-bash)
  (interactive (list my-term-shell)))
(ad-activate 'ansi-term)
#+END_SRC
*** Keybinding for ansi terminal -
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<s-return>") 'ansi-term)
#+END_SRC
* Use Package -
** Which key -
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :init(which-key-mode))
#+END_SRC
** Beacon -
#+BEGIN_SRC emacs-lisp
(use-package beacon
  :ensure t
  :init
  (beacon-mode t))
#+END_SRC

* Org -
** Org Bullets -
#+BEGIN_SRC emacs-lisp
  (use-package org-bullets
    :ensure t
    :config
      (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
#+END_SRC
* Ido mode -
** Enable Ido mode 
#+BEGIN_SRC emacs-lisp
  ;;better switching 
  (setq ido-enable-flex-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
  (ido-mode 1)
#+END_SRC
** ido mode vertical -
#+BEGIN_SRC emacs-lisp
  (use-package ido-vertical-mode
    :ensure t
    :init(ido-vertical-mode 1))
  (setq ido-vertical-define-keys 'C-n-and-C-p-only)

#+END_SRC
** Smex -
#+BEGIN_SRC emacs-lisp
  (use-package smex
    :ensure t
    :init(smex-initialize)
    :bind
    ("M-x" . smex))
#+END_SRC

